
# .github/workflows/parameterized-terraform-workflow.yml

name: Terraform Deployment Pipeline

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to (dev, uat, prod)'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - uat
      branch:
        description: 'Branch to deploy from'
        required: true
        default: 'master'

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/${{ inputs.branch }}' # Runs only if branch matches input

    env:
      TF_WORKSPACE: ${{ inputs.environment }}
      CRED: ${{ 
        inputs.environment == 'dev' && secrets.CRED 
        inputs.environment == 'uat' && secrets.CRED }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.3.0 # Specify your Terraform version here

      - name: Set Environment-Specific Azure Credentials
        id: set_creds
        run: |
          if [ "${{ inputs.environment }}" == "dev" ]; then
            echo "CRED=${{ secrets.CRED }}" >> $GITHUB_ENV
          elif [ "${{ inputs.environment }}" == "uat" ]; then
            echo "CRED=${{ secrets.CRED }}" >> $GITHUB_ENV
          elif [ "${{ inputs.environment }}" == "prod" ]; then
            echo "CRED=${{ secrets.CRED }}" >> $GITHUB_ENV
          fi

      - name: Parse Azure Credentials
        id: parse_credentials
        run: |
          echo "ARM_CLIENT_ID=$(echo '${{ env.CRED }}' | jq -r '.clientId')" >> $GITHUB_ENV
          echo "ARM_CLIENT_SECRET=$(echo '${{ env.CRED }}' | jq -r '.clientSecret')" >> $GITHUB_ENV
          echo "ARM_SUBSCRIPTION_ID=$(echo '${{ env.CRED }}' | jq -r '.subscriptionId')" >> $GITHUB_ENV
          echo "ARM_TENANT_ID=$(echo '${{ env.CRED }}' | jq -r '.tenantId')" >> $GITHUB_ENV
     
      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.CRED }}


      - name: Initialize Terraform
        run: terraform init


      - name: Terraform Plan
        run: terraform plan -var-file="${{ inputs.environment }}.tfvars"

      - name: Terraform Apply
        if: github.ref == 'refs/heads/${{ inputs.branch }}'
        run: terraform apply -auto-approve -var-file=""${{ inputs.environment }}.tfvars"
